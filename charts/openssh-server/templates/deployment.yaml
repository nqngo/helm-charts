apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openssh-server.fullname" . }}
  labels:
    {{- include "openssh-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openssh-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "openssh-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: ssh-config
          emptyDir: {}
        - name: {{ include "openssh-server.fullname" . }}-custom-init
          configMap:
            name: {{ include "openssh-server.fullname" . }}-custom-init
      initContainers:
        - name: init-ssh-pubkey
          image: busybox
          command:
            - sh
            - "-c"
            - |-
              mkdir -p /config/.ssh
              wget {{ .Values.PUBLIC_KEY_URL }} -O /config/.ssh/authorized_keys
          volumeMounts:
            - name: ssh-config
              mountPath: /config
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          volumeMounts:
            - name: ssh-config
              mountPath: /config
            - name: {{ include "openssh-server.fullname" . }}-custom-init
              mountPath: /config/custom-cont-init.d
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 2222
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
          - name: SUDO_ACCESS
            value: "{{ .Values.SUDO_ACCESS }}"
          - name: PASSWORD_ACCESS
            value: "{{ .Values.PASSWORD_ACCESS }}"
          - name: USER_NAME
            value: {{ .Values.USER_NAME }}
          {{- if .Values.USER_PASSWORD }}
          - name: USER_PASSWORD
            value: {{ .Values.USER_PASSWORD }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
